#include <stdio.h>
#include <stdarg.h>
#include <unistd.h>
#include <stdint.h>
// int strlenelm(const char *s){
//     int i ;
//     int con ;
//     i = 0;
//     con = 0;
    
//     while(s[i]){
// if(s[i]=='%' && ( s[i + 1]=='c' || s[i + 1]=='s' || s[i + 1]=='p' || s[i + 1]=='d' || s[i + 1]=='i' || s[i + 1]=='u' || s[i + 1]=='x' || s[i + 1]=='X' )){
//             i = i + 2;
//     }else if(s[i]=='%' &&  s[i + 1]=='%'){
//         i = i + 2;
//         con++;
//     }else if(s[i]=='%'){
//         i++;
        
//     }else{
//         i++;
//         con++;
//     }
    
//     }
//     return con; 
    
// }

int	ft_putchar(char c)
{
	write(1, &c, 1);
	return 1;
}
int	ft_putstr(char *s)
{
	int	i;

	if (!s)
		return 0;
	i = 0;
	while (s[i])
	{
		ft_putchar(s[i]);
		i++;
	}
	return i;
}
int	ft_putnbr(int n)
{
	long	nb;
    int con;
	nb = n;
	if (nb < 0)
	{
		write(1, "-", 1);
		nb *= -1;
	}
	if (nb <= 9 && nb >= 0)
	{
		ft_putchar(nb + '0');
	}
	else
	{
		ft_putnbr(nb / 10);
		ft_putnbr(nb % 10);
	}
	con = 0;
	while(nb!=0){
	    nb = nb / 10;
	    con++;
	}
	return con;
}

int	ft_putexa(int n,int nb)
{
    char *new; 
    int con = 0;
char *s1 = "0123456789abcdef";
char *s2 = "0123456789ABCDEF";

    if(nb==0)
        new = s1;
    else
        new = s2;

	if (n < 16 && n >= 0)
	{
		ft_putchar(new[n]);
	}
	else
	{
		ft_putexa(n / 16,n);
		ft_putexa(n % 16,n);
	}
		while(n!=0){
	    n = n / 16;
	    con++;
	}
	return con;
}
int ft_putptr(void *n){
    int con = 0;
    con += ft_putchar('0');
    con += ft_putchar('x');
    con += ft_putexa((unsigned long)n,0);
    return con;
}

int handle_format(char specifier, va_list args) {
    int nbr = 0;

    if (specifier == 'c') {
        nbr += ft_putchar(va_arg(args, int));
    } else if (specifier == 's') {
        nbr += ft_putstr(va_arg(args, char *));
    } else if (specifier == 'd' || specifier == 'i') {
        nbr += ft_putnbr(va_arg(args, int));
    } else if (specifier == 'u') {
        nbr += ft_putnbr((unsigned int)va_arg(args, unsigned int));
    } else if (specifier == 'x') {
        nbr += ft_putexa(va_arg(args, unsigned int), 0);
    } else if (specifier == 'X') {
        nbr += ft_putexa(va_arg(args, unsigned int), 1);
    } else if (specifier == 'p') {
        nbr += ft_putptr(va_arg(args, void *));
    } else if (specifier == '%') {
        nbr += ft_putchar('%');
    } else {
        nbr += ft_putchar('%');
        nbr += ft_putchar(specifier);
    }
    return nbr;
}

int ft_printf(const char *str, ...) {
    va_list args;
    int i = 0;
    int nbr = 0;

    va_start(args, str);
    while (str[i]) {
        if (str[i] == '%' && str[i + 1]) {
            nbr += handle_format(str[i + 1], args);
            i += 2; // Skip the '%' and the specifier
        } else {
            nbr += ft_putchar(str[i]);
            i++;
        }
    }
    va_end(args);
    return nbr;
}


int main() {
    // Write C code here
    char c = 'a';
    char *s = "abde";
    int n = 0;
    n = ft_printf("%X kk",12);
    printf("%d",n);
}




